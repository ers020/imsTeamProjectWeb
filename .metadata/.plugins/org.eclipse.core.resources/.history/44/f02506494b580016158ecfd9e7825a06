package com.revature.web;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.revature.app.DataService;
import com.revature.beans.ReimburseBean;
import com.revature.beans.RoleBean;
import com.revature.beans.StatusBean;
import com.revature.beans.TypeBean;
import com.revature.beans.UserBean;
/**
 * Front Controller
 * """"""""""""Controller"""""""""""""""
 * Examples!!!!!!!!!!
 */


public class RequestHelper {
	
	
	public String process(HttpServletRequest request, 
			HttpServletResponse response) {
		System.out.println(request.getRequestURI());
		
		switch(request.getRequestURI()){
			
			case"/ERS/main.do":{
				
				return"/main.jsp";
			}

			/*case"/ERS/login.do":{
				
				//parameters
				String username = request.getParameter("user");
				String password = request.getParameter("pass");
				
				//validation
				//pass to filter
				UserBean user = new UserBean();
				
				
				if(){
					request.setAttribute("errorMessage", "Username or password field left blank. Please check the fields.");
					return "/index.jsp";
				}
				
				
				
				if(user == null){
					request.setAttribute("errorMessage", "Username or password invalid. Please check the fields.");
					return"/index.jsp";
				}
				
				//request.getSession().setAttribute("session", user);
				//end User
				
				return "/main.jsp";

			}*/
			
			case"/ERS/admin.do":{
				
				//Roles 
				List<RoleBean> roles = new ArrayList<RoleBean>();
				DataService ds = new DataService();
				roles = ds.fillRolesBean(roles);
				//end Roles
				
				//User
				List<UserBean> user = new ArrayList<UserBean>();
				user = ds.fillUserBean(user, roles);
				//end User
				
				//Status
				List<StatusBean> stats = new ArrayList<StatusBean>();
				stats = ds.fillStatusBean(stats);
				//end Status
				
				//Type
				List<TypeBean> type = new ArrayList<TypeBean>();
				type = ds.fillTypeBean(type);
				//end Type	
				
				//Reimbursement
				List<ReimburseBean> reimburseList = new ArrayList<ReimburseBean>();
				reimburseList = ds.fillReimburseBean(user, stats, type, reimburseList);
				request.setAttribute("reimbs", reimburseList);
				//request.getSession().setAttribute("session",reimburseList);
				//end Reimbursement
				
				return"/adminView.jsp";
			}
			
			case"/ERS/clientClaim.do":{
				
				DataService ds = new DataService();
				
				//Status
				List<StatusBean> stats = new ArrayList<StatusBean>();
				stats = ds.fillStatusBean(stats);
				//end Status
				
				//Type
				List<TypeBean> type = new ArrayList<TypeBean>();
				type = ds.fillTypeBean(type);
				//end Type	
				
				//make available 
				request.setAttribute("stats", stats);
				request.setAttribute("types", type);
				
				return"/clientClaim.jsp";
				
			}
			
			case"/ERS/clientView.do":{
				
				DataService ds = new DataService();
				
				//get user id
				int userId = Integer.parseInt(request.getParameter("id"));
				
				UserBean thisUser = null;
				//User - Author
				//Roles 
				List<RoleBean> roles = new ArrayList<RoleBean>();
				roles = ds.fillRolesBean(roles);
				//end Roles
				//User
				thisUser = ds.fillUserBean(userId, thisUser, roles);
				//end User
				
				//User - Resolver
				List<UserBean> user = new ArrayList<UserBean>();
				user = ds.fillUserBean(user, roles);
				//end User
				//end User - Resolver
				
				//Status
				List<StatusBean> stats = new ArrayList<StatusBean>();
				stats = ds.fillStatusBean(stats);
				//end Status
				
				//Type
				List<TypeBean> type = new ArrayList<TypeBean>();
				type = ds.fillTypeBean(type);
				//end Type	
				
				//Reimbursement
				List<ReimburseBean> reimburseList = new ArrayList<ReimburseBean>();
				reimburseList = ds.fillReimburseBeanForIndiviual(thisUser, user, stats, type, reimburseList);
				request.setAttribute("individualReimbs", reimburseList);
				//request.getSession().setAttribute("session",reimburseList);
				//end Reimbursement
				
				
				return"/clientTable.jsp";
			}
			case"/ERS/addClaim.do":{
				
				DataService ds = new DataService();
				
				//get id and other variables
				int userId = Integer.parseInt(request.getParameter("id"));
				double amount = Double.parseDouble(request.getParameter("amount"));
				String desc = request.getParameter("desc");
				int type = Integer.parseInt(request.getParameter("type"));
				
				//get time!
				Date date = new Date();
				
				boolean submitted = false;
				submitted = ds.inputNewClaim(userId, amount, desc, type, date, submitted);
				
				
				return"/main.jsp";
			}
			
			case"/ERS/edit.do":{
				
				
				//take all items currently in table, and put them into form. 
				//DO NOT let them edi anything other than the status area.
				
				//FUTURE: allow the manager chang the amount given.
				
				return"/editEntry.jsp";
			}
			
			case"/ERS/logout.do":{
				request.getSession().invalidate();
				return"/logout.jsp";
			}
			
			default:{
				throw new IllegalArgumentException("Not a valid URI!");
			}
		
		
		}//end switch
		
	}//end process

	
	

}//end RequestHelper
