package com.revature.dataAccess;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.Query;

import com.revature.beans.Address;
import com.revature.beans.CategoryDescription;
import com.revature.beans.Client;
import com.revature.beans.ClientType;
import com.revature.beans.Invoice;
import com.revature.beans.Order;
import com.revature.beans.Product;
import com.revature.beans.State;

public class BusinessLayer {
	
	private DataLayerAccess dla;
	
	/////////////////////////// BEGIN ADD CLIENT //////////////////////////
	
	//Needs to have a State Name passed in to get State.
	//Use returned state object for making the Address
	public State getState(String stateName){
		State state = dla.getState(stateName);
		return state;
	}
	
	//Pass an Address object to add the Address
	public void addAddress(Address address){
		dla.createObject(address);
	}
	
	//Get the clientTypeId object chosen from the Drop-down list
	public ClientType getClientType(int clientTypeId){
		ClientType clientType = dla.getClientType(clientTypeId);
		
		return clientType;
	}
	
	//Now add the Client! WOO!
	//Probably should change to boolean for a check
	public void addClient(Client client){
		dla.createObject(client);
	}

	////////////////////////// END ADD CLIENT ///////////////////////////
	
	
	///////////////////////// BEGIN UPDATE AND 'DELETE' CLIENT ////////////////////////////////
	
	//retrieve list of clients
	//Use to refresh the clients on the web side
	public Set<Client> getClients(){
		Set<Client> clients = dla.allClients();
		
		return clients;
	}
	
	//pass the changed client back
	public void updateClient(Client client){
		dla.createObject(client);
	}
	
	//pass to 'delete' client
	public void deleteClient(Client client){
		dla.terminateClient(client);
	}
	
	///////////////////////// END UPDATE AND 'DELETE' CLIENT //////////////////////////////////
	
	
	///////////////////////// BEGIN ADD PRODUCTS //////////////////////////////////////////////

	//get the Category Description based on the Drop Down list
	public Set<CategoryDescription> getCatDesc(String categoryChoice){
		Set<CategoryDescription> catDesc = dla.getCatChoice(categoryChoice);
		
		return catDesc;
	}
	
	//use a form to create a new product, pass the created object back
	//can change this to send back a boolean for verification of adding the item
	public void addProduct(Product product){
		dla.createObject(product);
	}
	
	//////////////////////// END ADD PRODUCTS ////////////////////////////////////////////////
	
	
	/////////////////////// BEGIN UPDATE AND 'DELETE' PRODUCTS //////////////////////////////////////
	
	//get all products
	public Set<Product> getAllProducts(){
		Set<Product> products = dla.getProducts();
		
		return products;
	}
	
	//update product
	public void updateProduct(Product product){
		dla.createObject(product);
	}
	
	//'delete' product
	public void deleteProduct(Product product){
		dla.deleteProduct(product);
	}
	
	////////////////////// END UPDATE AND 'DELETE' PRODUCTS /////////////////////////////////////////
	
	
	////////////////////// BEGIN GENERATING REPORTS ////////////////////////////////////////////////
	
	///grab all reports (for now), and work on them on the front end. 
	public Set<Invoice> getInvoices(){
		Set<Invoice> invoices = dla.getAllInvoices();
		
		return invoices;
		
	}
	
	////////////////////// END GENERATING REPORTS /////////////////////////////////////////////////
	
	
	/////////////////// BEGIN CREATING INCOMING AND OUTGOING INVOICES ///////////////////////////////
	
	//Get client type
//		public Set<ClientType> getTypes() {
//			log.info("Query DB for List of Client Type");
//			String clientTypeQuery = "FROM com.revature.beans.ClientType";
//			Query query = session.createQuery(clientTypeQuery);
//			
//			@SuppressWarnings("unchecked")
//			Set<ClientType> type = new HashSet<ClientType>(query.list());
//			log.info("Return result list of Client Type");
//			return type;
//		}
//		
//		//Get clients
//		public Set<Client> getClients(int clientTypeId){
//			log.info("Query DB for List of Clients based on Client Type Id");
//			String clientType = "FROM com.revature.beans.Client WHERE CLIENT_TYPE = :param";
//			Query query = session.createQuery(clientType);
//			query.setInteger("param", clientTypeId);
//		
//			@SuppressWarnings("unchecked")
//			Set<Client> clients = new HashSet<Client>(query.list());
//			
//			log.info("Return result for List of Clients based on Client Type Id");
//			return clients;
//		}
//
//		//Get products
//		public Set<Product> getAllProducts() {
//			log.info("Query DB for List of Products");
//			String productQuery = "FROM com.revature.beans.Product";
//			Query query = session.createQuery(productQuery);
//			
//			@SuppressWarnings("unchecked")
//			Set<Product> products = new HashSet<Product>(query.list());
//			log.info("Result for List of Products");
//			return products;
//		}
//
//		//Update stocks
//		public void changeStock(int amount, int productId) {
//			log.info("Query DB to change the Stock amount based on Product ID");
//			String productQuery = "UPDATE BEARDO_PRODUCTS set quantity =:quantity "+
//					"WHERE id =:id";
//			Query query = session.createQuery(productQuery);
//			query.setParameter("quantity", amount);
//			query.setParameter("id", productId);
//			query.executeUpdate();
//			log.info("Update executed.");
//			return;
//		}
//		
//		//Get current order after creation --> needed because the ID changes AFTER going into the database, but before being
//		//stored into the DB
//		public Order getCurrentOrder(Date orderDate) {
//			
//			log.info("Query DB get newly created Order based on Date");
//			String hql = "FROM Order WHERE date =:date";
//			Query query = session.createQuery(hql);
//			query.setParameter("date", orderDate);
//			
//			Order order = (Order) query.uniqueResult();
//			log.info("Return result of search for new Order based on Date");
//			return order;
//		}
	
	////////////////////// END CREATING INCOMING AND OUTGOING INVOICES //////////////////////////////
}
